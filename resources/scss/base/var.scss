////
/// CSS custom properties (variables).
///
/// @author Justin Tadlock <justintadlock@gmail.com>
/// @link   https://github.com/blogwheels-dev/blogwheels
////

///
/// Maps specific presets (CSS Custom Properties) that are default to WordPress
/// or the Core TT* themes to the theme's design tokens where possible or
/// provide a reasonable fallback.
///
body {
	// Ensure that black and white colors are always defined.
	--wp--preset--color--black: #000;
	--wp--preset--color--white: #fff;

	// Map TT4 standard color names to semantic theme colors.
	--wp--preset--color--base:     var(--wp--custom--color--surface--level-0, #fff);
	--wp--preset--color--contrast: var(--wp--custom--color--text--default, #000);

	/// Map default WordPress font sizes to the theme's sizes.
	--wp--preset--font-size--small:   var(--wp--preset--font-size--xs);
	--wp--preset--font-size--medium:  var(--wp--preset--font-size--md);
	--wp--preset--font-size--large:   var(--wp--preset--font-size--2-xl);
	--wp--preset--font-size--x-large: var(--wp--preset--font-size--3-xl);

	/// Map default WordPress spacing sizes to the theme's sizes.
	--wp--preset--spacing--20: var(--wp--preset--spacing--minus-2);
	--wp--preset--spacing--30: var(--wp--preset--spacing--minus-1);
	--wp--preset--spacing--40: var(--wp--preset--spacing--base);
	--wp--preset--spacing--50: var(--wp--preset--spacing--plus-1);
	--wp--preset--spacing--60: var(--wp--preset--spacing--plus-3);
	--wp--preset--spacing--70: var(--wp--preset--spacing--plus-4);
	--wp--preset--spacing--80: var(--wp--preset--spacing--plus-6);
}

///
/// When a section style is in use, map its colors defined in `theme.json` to
/// the semantic color tokens for the theme.
///
$surface: '--wp--custom--color--surface';
$text:    '--wp--custom--color--text';
$icon:    '--wp--custom--color--icon';
$border:  '--wp--custom--color--border';

@for $id from 1 through 3 {
	$section: '--wp--custom--section-#{$id}';

	:root :where(.is-style-section-#{$id}) {

		// Surface/background colors.
		#{$surface}--level-0: var(#{$section}--color--surface--level-0);
		#{$surface}--level-1: var(#{$section}--color--surface--level-1);
		#{$surface}--level-2: var(#{$section}--color--surface--level-2);
		#{$surface}--primary: var(#{$section}--color--surface--primary);

		// Button component surface/background colors.
		#{$surface}--button--primary--default: var(#{$section}--color--surface--button--primary--default);
		#{$surface}--button--primary--hover:   var(#{$section}--color--surface--button--primary--hover);

		// Text colors.
		#{$text}--default:    var(#{$section}--color--text--default);
		#{$text}--muted:      var(#{$section}--color--text--muted);
		#{$text}--primary:    var(#{$section}--color--text--primary);
		#{$text}--on-primary: var(#{$section}--color--text--on-primary);

		// Button component text colors.
		#{$text}--button--primary--default: var(#{$section}--color--text--button--primary--default);
		#{$text}--button--primary--hover:   var(#{$section}--color--text--button--primary--hover);

		// Link component text colors.
		#{$text}--link--primary--default:   var(#{$section}--color--text--link--primary--default);
		#{$text}--link--primary--hover:     var(#{$section}--color--text--link--primary--hover);
		#{$text}--link--secondary--default: var(#{$section}--color--text--link--secondary--default);
		#{$text}--link--secondary--hover:   var(#{$section}--color--text--link--secondary--hover);

		// Icon colors.
		#{$icon}--default: var(#{$section}--color--icon--default);
		#{$icon}--muted:   var(#{$section}--color--icon--muted);
		#{$icon}--primary: var(#{$section}--color--icon--primary);

		// Border colors. Note that these are defined for child elements
		// only. This is because the border color for the parent sits on
		// sections with other backgrounds and should inherit their
		// borders.
		> * {
			#{$icon}--default: var(#{$section}--color--border--default, currentColor);

			// Also assigns the global border in case it and the
			// semantic border are out of sync for some reason.
			--wp--custom--global--border--color: var(#{$section}--color--border--default, currentColor);
		}
	}
}
