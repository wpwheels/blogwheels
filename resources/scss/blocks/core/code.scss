////
/// Code block CSS.
///
/// @author WPWheels <wpwheels@wpwheels.com>
/// @link   https://github.com/wpwheels/blogwheels
////

// -----------------------------------------------------------------------------
// Block fixes.
// -----------------------------------------------------------------------------

///
/// WordPress dumps styles on the `<code>` element instead of the `<pre>`. ðŸ¤®
///
.wp-block-code {
	overflow: auto;
	word-wrap: normal;

	code {
		overflow: revert;
		word-wrap: revert;
		white-space: revert;
		display: revert;
	}

	// Ensures child tags nested inside `<code>` inherit typography styles.
	// But leave style and weight the same for things like bold and italic.
	code * {
		font-family: inherit;
		font-size: inherit;
		font-family: inherit;
		line-height: inherit;
	}
}

// -----------------------------------------------------------------------------
// Block customizations.
// -----------------------------------------------------------------------------

// No customizations...

// -----------------------------------------------------------------------------
// Block style variations.
// -----------------------------------------------------------------------------

///
/// Code syntax highlighting variation. On the server side, this is a wrapping
/// `<div> around the `<pre>` element.
///
.wp-block-code:is(.is-style-highlight:has(pre)) {
	overflow: hidden;
	box-sizing: border-box;
	padding: 0;
	border-color: var(--wp--custom--global--border--color);
	border-style: var(--wp--custom--global--border--style);
	border-width: var(--wp--custom--global--border--width);
	border-radius: var(--wp--custom--global--border--radius);
	box-shadow: var(--wp--custom--global--shadow);

	// Reset what would've normally been a `<pre>` tag styling.
	word-wrap: initial;

	::selection {
		color: currentColor;
		background: #334155;
	}

	// Ensure nested markup colors inherit from the `<code>` element or are
	// removed altogether.
	code *:where(:not(.token)) {
		color: currentColor;
		text-decoration-color: currentColor;
		border-color: currentColor;
		outline-color: currentColor;
		background: transparent;
		box-shadow: none;
	}

	// Better colors for `<mark>` element, which is used for nice highlights.
	code mark {
		background: #334155;
	}
}

.wp-block-code {
	&__toolbar {
		box-sizing: border-box;
		display: flex;
		justify-content: space-between;
		align-items: center;
		background: #1e293b;
		color: #cbd5e1;
		font-family: var(--wp--preset--font-family--mono);
		font-size: 14px;
		line-height: 1.5;
		padding: var(--wp--preset--spacing--minus-1)
			var(--wp--preset--spacing--base);
		gap: 2px;
	}

	&__toolbar-icon {
		display: flex;
		gap: 2px;

		svg {
			fill: #ff5f58;
			width: 1em;
			height: 1em;
		}

		svg + svg {
			fill: #febc2e;
		}

		svg + svg + svg {
			fill: #28c840;
		}
	}

	&__toolbar-label {
		line-height: 1;
		background: rgba(255, 255, 255, 0.03);
		padding: 4px 8px;
	}

	&__code {
		tab-size: 4;
		box-sizing: border-box;
		overflow: auto;
		word-wrap: normal;

		max-height: calc(
			100vh - 46px - (var(--wp--preset--spacing--minus-1) * 2) -
				(var(--wp--preset--spacing--plus-3) * 2)
		); // 46px is mobile size of WP toolbar.

		margin: 0;
		padding: var(--wp--preset--spacing--base) var(--wp--preset--spacing--plus-3);

		// Set defaults so they can be overwritten properly via the UI.
		border: 0 solid transparent;
		border-top-width: 1px;
		border-top-color: #334155;
		border-radius: 0;
		box-shadow: none;
		outline: none;
	}
}

.wp-block-code__code {
	color: #7e848f;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	background: #1e293b;

	&.language-css,
	&.language-scss {
		color: #fde68a;
	}

	&.language-js,
	&.language-javascript {
		color: #34d399;
	}

	.keyword {
		color: #a78bfa;
	}

	.comment,
	.prolog,
	.doctype,
	.cdata {
		color: #64748b;
		font-style: italic;
	}

	.punctuation {
		color: #94a3b8;
	}

	// ?
	.tag,
	.symbol,
	.deleted {
	}

	.property {
		color: #fde68a;
	}

	.constant {
		color: #cbd5e1;
	}

	.boolean,
	.number {
		color: #fdba74;
	}

	.selector {
		color: #7dd3fc;
	}

	.attr-name,
	.string,
	.char,
	.builtin,
	.inserted {
		color: #94a3b8;
	}

	.entity,
	.url,
	.language-css .string,
	.style .string,
	.variable,
	.parameter,
	.interpolation {
		color: #34d399;
	}

	.operator {
		color: #a5f3fc;
	}

	.atrule,
	.attr-value,
	.function {
		color: #7dd3fc;
	}

	.class-name,
	.maybe-class-name,
	.package {
		color: #fde68a;
	}

	.attribute {
		.punctuation {
			color: #a78bfa;
		}
		.attribute-class-name {
			color: #cbd5e1;
		}
	}

	// ?
	// opening <?php tag uses this important.
	.regex,
	.important {
		color: #fb7185;
	}

	//.important,
	.bold {
		font-weight: bold;
	}
	.italic {
		font-style: italic;
	}

	.entity {
		cursor: help;
	}

	&.language-css .property,
	&.language-scss .property {
		color: #cbd5e1;
	}

	&.language-php {
		.this.keyword + .operator {
			color: #cbd5e1;
		}

		.this.keyword {
			color: #fde68a;
		}

		.this.keyword + .operator + .property {
			color: #34d399;
		}
	}
}
